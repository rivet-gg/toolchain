diff --git a/sdks/rust/src/apis/mod.rs b/sdks/rust/src/apis/mod.rs
index 73ed6261..caa52f60 100644
--- a/sdks/rust/src/apis/mod.rs
+++ b/sdks/rust/src/apis/mod.rs
@@ -16,16 +16,33 @@ pub enum Error<T> {
 	ResponseError(ResponseContent<T>),
 }
 
+#[derive(serde::Deserialize)]
+pub struct RivetErrorBody {
+	pub code: String,
+	pub message: String,
+	pub documentation: Option<String>,
+}
+
 impl<T> fmt::Display for Error<T> {
 	fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
 		let (module, e) = match self {
 			Error::Reqwest(e) => ("reqwest", e.to_string()),
 			Error::Serde(e) => ("serde", e.to_string()),
 			Error::Io(e) => ("IO", e.to_string()),
-			Error::ResponseError(e) => (
-				"response",
-				format!("status code {}\n{}", e.status, e.content),
-			),
+			Error::ResponseError(e) => {
+				if let Ok(body) = serde_json::from_str::<RivetErrorBody>(&e.content) {
+					write!(f, "{}", body.message)?;
+					if let Some(docs) = &body.documentation {
+						write!(f, "\n{docs}")?;
+					}
+					return Ok(());
+				}
+
+				(
+					"response",
+					format!("status code {}\n{}", e.status, e.content),
+				)
+			}
 		};
 		write!(f, "error in {}: {}", module, e)
 	}
